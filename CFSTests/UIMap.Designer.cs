// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CFSTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Open_Browser_And_Navigate - Use 'Open_Browser_And_NavigateParams' to pass parameters into this method.
        /// </summary>
        public void Open_Browser_And_Navigate()
        {

            // Go to web page 'https://civicportal-qa.azurewebsites.net/app/login' using new browser instance
            BrowserWindow civicportalqaazurewebsitesnetBrowser = BrowserWindow.Launch(new System.Uri(this.Open_Browser_And_NavigateParams.Url));
        }
        
        /// <summary>
        /// Enter_Username - Use 'Enter_UsernameParams' to pass parameters into this method.
        /// </summary>
        public void Enter_Username()
        {
            #region Variable Declarations
            HtmlEdit uIUsernameEdit = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument.UIUsernameEdit;
            #endregion

            // Type 'civictestuser@titan.local' in 'User name' text box
            uIUsernameEdit.Text = this.Enter_UsernameParams.UIUsernameEditText;
        }
        
        /// <summary>
        /// Enter_Password - Use 'Enter_PasswordParams' to pass parameters into this method.
        /// </summary>
        public void Enter_Password()
        {
            #region Variable Declarations
            HtmlEdit uIPasswordEdit = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument.UIPasswordEdit;
            #endregion

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.Enter_PasswordParams.UIPasswordEditPassword;
        }
        
        /// <summary>
        /// Click_On_Login_Button
        /// </summary>
        public void Click_On_Login_Button()
        {
            #region Variable Declarations
            HtmlButton uILOGINButton = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument.UICtrlauthFormCustom.UILOGINButton;
            #endregion

            // Click 'LOG IN' button
            Mouse.Click(uILOGINButton, new Point(38, 17));
        }
        
        /// <summary>
        /// Verify_Whether_Login_Name_Is_Displayed_Or_Not - Use 'Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Verify_Whether_Login_Name_Is_Displayed_Or_Not()
        {
            #region Variable Declarations
            HtmlSpan uICIVICPane = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument1.UIHiCIVICButton.UICIVICPane;
            #endregion

            // Verify that the 'InnerText' property of 'CIVIC' pane equals 'CIVIC'
            Assert.AreEqual(this.Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues.UICIVICPaneInnerText, uICIVICPane.InnerText, "Login name is not displayed");
        }
        
        /// <summary>
        /// Click_On_Submit_Menu_Link
        /// </summary>
        public void Click_On_Submit_Menu_Link()
        {
            #region Variable Declarations
            HtmlHyperlink uISUBMITHyperlink = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument1.UINavbartwoPane.UISUBMITHyperlink;
            #endregion

            // Click 'SUBMIT' link
            Mouse.Click(uISUBMITHyperlink, new Point(40, 33));
        }
        
        /// <summary>
        /// Click_On_32_Upload_Button
        /// </summary>
        public void Click_On_32_Upload_Button()
        {
            #region Variable Declarations
            HtmlButton uIItem32UPLOADButton = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument2.UIItem32UPLOADButton;
            #endregion

            // Click '3.2 UPLOAD' button
            Mouse.Click(uIItem32UPLOADButton, new Point(98, 27));
        }
        
        /// <summary>
        /// Provide_File_Name
        /// </summary>
        public void Provide_File_Name()
        {
            #region Variable Declarations
            HtmlSpan uIBrowsePane = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument2.UIBrowsePane;
            WinEdit uINameEdit = this.UIChooseFiletoUploadWindow.UIItemWindow.UIExample32filefnmListItem.UINameEdit;
            WinButton uIOpenButton = this.UIChooseFiletoUploadWindow.UIOpenWindow.UIOpenButton;
            #endregion

            // Click 'Browse…' pane
            Mouse.Click(uIBrowsePane, new Point(49, 22));

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(92, 15));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(55, 11));
        }
        
        /// <summary>
        /// Click_On_Upload_File_Button
        /// </summary>
        public void Click_On_Upload_File_Button()
        {
            #region Variable Declarations
            HtmlButton uIUPLOADFILEButton = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument2.UIUPLOADFILEButton;
            #endregion

            // Click 'UPLOAD FILE' button
            Mouse.Click(uIUPLOADFILEButton, new Point(45, 18));
        }
        
        /// <summary>
        /// Logout_User
        /// </summary>
        public void Logout_User()
        {
            #region Variable Declarations
            HtmlButton uIHiCIVICButton = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument2.UIHiCIVICButton;
            HtmlHyperlink uILogOutHyperlink = this.UIHomeCivicClientPortaWindow.UIHomeCivicClientPortaDocument2.UINavbartwoPane.UILogOutHyperlink;
            #endregion

            // Click 'Hi CIVIC' button
            Mouse.Click(uIHiCIVICButton, new Point(182, 29));

            // Click 'Log Out' link
            Mouse.Click(uILogOutHyperlink, new Point(60, 8));
        }
        
        #region Properties
        public virtual Open_Browser_And_NavigateParams Open_Browser_And_NavigateParams
        {
            get
            {
                if ((this.mOpen_Browser_And_NavigateParams == null))
                {
                    this.mOpen_Browser_And_NavigateParams = new Open_Browser_And_NavigateParams();
                }
                return this.mOpen_Browser_And_NavigateParams;
            }
        }
        
        public virtual Enter_UsernameParams Enter_UsernameParams
        {
            get
            {
                if ((this.mEnter_UsernameParams == null))
                {
                    this.mEnter_UsernameParams = new Enter_UsernameParams();
                }
                return this.mEnter_UsernameParams;
            }
        }
        
        public virtual Enter_PasswordParams Enter_PasswordParams
        {
            get
            {
                if ((this.mEnter_PasswordParams == null))
                {
                    this.mEnter_PasswordParams = new Enter_PasswordParams();
                }
                return this.mEnter_PasswordParams;
            }
        }
        
        public virtual Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues
        {
            get
            {
                if ((this.mVerify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues == null))
                {
                    this.mVerify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues = new Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues();
                }
                return this.mVerify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues;
            }
        }
        
        public UIHomeCivicClientPortaWindow UIHomeCivicClientPortaWindow
        {
            get
            {
                if ((this.mUIHomeCivicClientPortaWindow == null))
                {
                    this.mUIHomeCivicClientPortaWindow = new UIHomeCivicClientPortaWindow();
                }
                return this.mUIHomeCivicClientPortaWindow;
            }
        }
        
        public UIChooseFiletoUploadWindow UIChooseFiletoUploadWindow
        {
            get
            {
                if ((this.mUIChooseFiletoUploadWindow == null))
                {
                    this.mUIChooseFiletoUploadWindow = new UIChooseFiletoUploadWindow();
                }
                return this.mUIChooseFiletoUploadWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Browser_And_NavigateParams mOpen_Browser_And_NavigateParams;
        
        private Enter_UsernameParams mEnter_UsernameParams;
        
        private Enter_PasswordParams mEnter_PasswordParams;
        
        private Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues mVerify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues;
        
        private UIHomeCivicClientPortaWindow mUIHomeCivicClientPortaWindow;
        
        private UIChooseFiletoUploadWindow mUIChooseFiletoUploadWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Browser_And_Navigate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Browser_And_NavigateParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://civicportal-qa.azurewebsites.net/app/login' using new browser instance
        /// </summary>
        public string Url = "https://civicportal-qa.azurewebsites.net/app/login";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Enter_Username'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Enter_UsernameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'civictestuser@titan.local' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "civictestuser@titan.local";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Enter_Password'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Enter_PasswordParams
    {
        
        #region Fields
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "E/T8V5slNWAG2wrSdLNBnE0Z0qT6QR9IKdhEbNvbYuc=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Verify_Whether_Login_Name_Is_Displayed_Or_Not'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Verify_Whether_Login_Name_Is_Displayed_Or_NotExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'CIVIC' pane equals 'CIVIC'
        /// </summary>
        public string UICIVICPaneInnerText = "CIVIC";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHomeCivicClientPortaWindow : BrowserWindow
    {
        
        public UIHomeCivicClientPortaWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home - Civic Client Portal";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomeCivicClientPortaDocument UIHomeCivicClientPortaDocument
        {
            get
            {
                if ((this.mUIHomeCivicClientPortaDocument == null))
                {
                    this.mUIHomeCivicClientPortaDocument = new UIHomeCivicClientPortaDocument(this);
                }
                return this.mUIHomeCivicClientPortaDocument;
            }
        }
        
        public UIHomeCivicClientPortaDocument1 UIHomeCivicClientPortaDocument1
        {
            get
            {
                if ((this.mUIHomeCivicClientPortaDocument1 == null))
                {
                    this.mUIHomeCivicClientPortaDocument1 = new UIHomeCivicClientPortaDocument1(this);
                }
                return this.mUIHomeCivicClientPortaDocument1;
            }
        }
        
        public UIHomeCivicClientPortaDocument2 UIHomeCivicClientPortaDocument2
        {
            get
            {
                if ((this.mUIHomeCivicClientPortaDocument2 == null))
                {
                    this.mUIHomeCivicClientPortaDocument2 = new UIHomeCivicClientPortaDocument2(this);
                }
                return this.mUIHomeCivicClientPortaDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIHomeCivicClientPortaDocument mUIHomeCivicClientPortaDocument;
        
        private UIHomeCivicClientPortaDocument1 mUIHomeCivicClientPortaDocument1;
        
        private UIHomeCivicClientPortaDocument2 mUIHomeCivicClientPortaDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHomeCivicClientPortaDocument : HtmlDocument
    {
        
        public UIHomeCivicClientPortaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home - Civic Client Portal";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/app/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://civicportal-qa.azurewebsites.net/app/login";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User name";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" class=\"form-control ng-p";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUsernameEdit.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"password\" class=\"form-control ng-p";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public UICtrlauthFormCustom UICtrlauthFormCustom
        {
            get
            {
                if ((this.mUICtrlauthFormCustom == null))
                {
                    this.mUICtrlauthFormCustom = new UICtrlauthFormCustom(this);
                }
                return this.mUICtrlauthFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private UICtrlauthFormCustom mUICtrlauthFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICtrlauthFormCustom : HtmlCustom
    {
        
        public UICtrlauthFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = null;
            this.SearchProperties[UITestControl.PropertyNames.Name] = "$ctrl.authForm";
            this.FilterProperties["Class"] = "cp-form ng-dirty ng-valid-parse ng-valid ng-valid-required";
            this.FilterProperties["ControlDefinition"] = "name=\"$ctrl.authForm\" class=\"cp-form ng-";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILOGINButton
        {
            get
            {
                if ((this.mUILOGINButton == null))
                {
                    this.mUILOGINButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILOGINButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILOGINButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILOGINButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " LOG IN  ";
                    this.mUILOGINButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILOGINButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILOGINButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn cp-btn-gray btn-sm cp-btn-orange";
                    this.mUILOGINButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn cp-btn-gray btn-sm cp-btn-ora";
                    this.mUILOGINButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUILOGINButton.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUILOGINButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILOGINButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHomeCivicClientPortaDocument1 : HtmlDocument
    {
        
        public UIHomeCivicClientPortaDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home - Civic Client Portal";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/app/agents";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://civicportal-qa.azurewebsites.net/app/agents";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public UIHiCIVICButton UIHiCIVICButton
        {
            get
            {
                if ((this.mUIHiCIVICButton == null))
                {
                    this.mUIHiCIVICButton = new UIHiCIVICButton(this);
                }
                return this.mUIHiCIVICButton;
            }
        }
        
        public UINavbartwoPane UINavbartwoPane
        {
            get
            {
                if ((this.mUINavbartwoPane == null))
                {
                    this.mUINavbartwoPane = new UINavbartwoPane(this);
                }
                return this.mUINavbartwoPane;
            }
        }
        #endregion
        
        #region Fields
        private UIHiCIVICButton mUIHiCIVICButton;
        
        private UINavbartwoPane mUINavbartwoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHiCIVICButton : HtmlButton
    {
        
        public UIHiCIVICButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "welcome-menu";
            this.SearchProperties[HtmlButton.PropertyNames.Name] = null;
            this.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " Hi CIVIC  ";
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Title] = null;
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default dropdown-toggle";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default dropdown-toggle\" ";
            this.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UICIVICPane
        {
            get
            {
                if ((this.mUICIVICPane == null))
                {
                    this.mUICIVICPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUICIVICPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICIVICPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICIVICPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "CIVIC";
                    this.mUICIVICPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICIVICPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "wc-name ng-binding";
                    this.mUICIVICPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"wc-name ng-binding\"";
                    this.mUICIVICPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUICIVICPane.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUICIVICPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUICIVICPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavbartwoPane : HtmlDiv
    {
        
        public UINavbartwoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbartwo";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PRICING CALCULATOR\r\nLOAN PROGRAMS\r\n\r\nSUB";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "collapse navbar-collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"collapse navbar-collapse\" id=\"navbartwo\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISUBMITHyperlink
        {
            get
            {
                if ((this.mUISUBMITHyperlink == null))
                {
                    this.mUISUBMITHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISUBMITHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISUBMITHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISUBMITHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISUBMITHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SUBMIT";
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "/app/submitloan";
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ng-scope";
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"ng-scope\" href=\"/app/submitloan\" ";
                    this.mUISUBMITHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUISUBMITHyperlink.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUISUBMITHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISUBMITHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHomeCivicClientPortaDocument2 : HtmlDocument
    {
        
        public UIHomeCivicClientPortaDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home - Civic Client Portal";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/app/submitloan";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://civicportal-qa.azurewebsites.net/app/submitloan";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIItem32UPLOADButton
        {
            get
            {
                if ((this.mUIItem32UPLOADButton == null))
                {
                    this.mUIItem32UPLOADButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIItem32UPLOADButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIItem32UPLOADButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIItem32UPLOADButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "3.2 UPLOAD ";
                    this.mUIItem32UPLOADButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIItem32UPLOADButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIItem32UPLOADButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-upload";
                    this.mUIItem32UPLOADButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-upload\" ng-click=\"$ctrl.t";
                    this.mUIItem32UPLOADButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUIItem32UPLOADButton.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIItem32UPLOADButton;
            }
        }
        
        public HtmlSpan UIBrowsePane
        {
            get
            {
                if ((this.mUIBrowsePane == null))
                {
                    this.mUIBrowsePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBrowsePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBrowsePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBrowsePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Browse… ";
                    this.mUIBrowsePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBrowsePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "btn btn-browse";
                    this.mUIBrowsePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"btn btn-browse\"";
                    this.mUIBrowsePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
                    this.mUIBrowsePane.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIBrowsePane;
            }
        }
        
        public HtmlButton UIUPLOADFILEButton
        {
            get
            {
                if ((this.mUIUPLOADFILEButton == null))
                {
                    this.mUIUPLOADFILEButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIUPLOADFILEButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIUPLOADFILEButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIUPLOADFILEButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "UPLOAD FILE ";
                    this.mUIUPLOADFILEButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIUPLOADFILEButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIUPLOADFILEButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-upload";
                    this.mUIUPLOADFILEButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-upload\" ng-click=\"$ctrl.o";
                    this.mUIUPLOADFILEButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUIUPLOADFILEButton.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIUPLOADFILEButton;
            }
        }
        
        public HtmlButton UIHiCIVICButton
        {
            get
            {
                if ((this.mUIHiCIVICButton == null))
                {
                    this.mUIHiCIVICButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIHiCIVICButton.SearchProperties[HtmlButton.PropertyNames.Id] = "welcome-menu";
                    this.mUIHiCIVICButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIHiCIVICButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " Hi CIVIC  ";
                    this.mUIHiCIVICButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIHiCIVICButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIHiCIVICButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default dropdown-toggle";
                    this.mUIHiCIVICButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default dropdown-toggle\" ";
                    this.mUIHiCIVICButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIHiCIVICButton.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUIHiCIVICButton;
            }
        }
        
        public UINavbartwoPane1 UINavbartwoPane
        {
            get
            {
                if ((this.mUINavbartwoPane == null))
                {
                    this.mUINavbartwoPane = new UINavbartwoPane1(this);
                }
                return this.mUINavbartwoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIItem32UPLOADButton;
        
        private HtmlSpan mUIBrowsePane;
        
        private HtmlButton mUIUPLOADFILEButton;
        
        private HtmlButton mUIHiCIVICButton;
        
        private UINavbartwoPane1 mUINavbartwoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavbartwoPane1 : HtmlDiv
    {
        
        public UINavbartwoPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbartwo";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PRICING CALCULATOR\r\nLOAN PROGRAMS\r\n\r\nSUB";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "collapse navbar-collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"collapse navbar-collapse\" id=\"navbartwo\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Home - Civic Client Portal");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogOutHyperlink
        {
            get
            {
                if ((this.mUILogOutHyperlink == null))
                {
                    this.mUILogOutHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogOutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogOutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogOutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogOutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log Out";
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://civicportal-qa.azurewebsites.net/#";
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "log-out";
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"log-out\" href=\"#\" ng-click=\"$ctrl";
                    this.mUILogOutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "11";
                    this.mUILogOutHyperlink.WindowTitles.Add("Home - Civic Client Portal");
                    #endregion
                }
                return this.mUILogOutHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogOutHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChooseFiletoUploadWindow : WinWindow
    {
        
        public UIChooseFiletoUploadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Choose File to Upload";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UIExample32filefnmListItem UIExample32filefnmListItem
        {
            get
            {
                if ((this.mUIExample32filefnmListItem == null))
                {
                    this.mUIExample32filefnmListItem = new UIExample32filefnmListItem(this);
                }
                return this.mUIExample32filefnmListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIExample32filefnmListItem mUIExample32filefnmListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIExample32filefnmListItem : WinListItem
    {
        
        public UIExample32filefnmListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Example 3.2 file.fnm";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
}
